1.Расскажите,чем,на ваш взгляд, отличается хорошая верстка от плохой с точки зрения
(считаю что верстка - это HTML/CSS):

- Пользователя(Плохая верстка):
1.Не вижу часть фотографии или текста.
2.Текст наезжает на другой текст или фотографию.
3.Не возможно прочитать текст,так как он слишком: маленький на большом экране,слишком большой на маленьком экране, слишком бледный на светлом фоне и т.д.(CSS);
4.Плохое качество фотографии,ничего не видно,слишком болшая фотография,слишком маленькая фотография(а там схема метро).
5.Слишком долго все грузится, уйду с этого сайта
(Не совсем верстка,но верстальщик может может ускорить скорость загрузки пару тегами(например для скрипта async, defer) и новые теги link rel=’preload’ например).
- Пользователя(хорошая верстка):
	1.Все быстро загрузилось, весь текст комфортно читать,фотографии на 	своих местах с правильными размерами.
	
- Менеджера проекта(Плохая верстка):
1.Заказчик не доволен:
	Всей версткой, 
Как выглядит эта кнопочка,
Как будто что-то съехало и т.д.
- Менеджера проекта(Хорошая верстка):
1.Заказчик всем доволен.



- Дизайнера (Плохая верстка):
1.Этот блок должен располагаться на 1px левее от этого.
- Дизайнера (Хорошая верстка):
1.Проверил по Perfect pixel верстку, все на своих местах.


- Верстальщика (Хорошая верстка):
1.HTML-шаблон полностью соответсвует макету.
2.Все теги семантичны.
3.У каждой фотографии прописаны размеры и alt.
4.У блоков нету фиксированой высоты.
5.Верстка не ломается при добавление текста или 	блоков.

- Клиентского программиста (Хорошая верстка):
1.Есть шаблоны,где нужны.
2.Сверстанно по БЭМ ,тогда будет легче разбить все на компоненты.


- Серверного программиста (Хорошая верстка):
1.Правильно сверстанные формы.
2.Минимальная проверка.(например required  на обязательные поля).


2.Опишите основные особенности верстки крупных многостраничных сайтов, дизайн которых может меняться в процессе реализации и поддержки:
1.Использовать методолгию БЭМ. Что бы переиспользовать те же, или похожие блоки.
Использовать желательно классы (Исправляем в одном месте,иправляется везде где используется класс).
2.Использовать переменные для цветов обязательно(чтобы легче менять дизайн сайта),и в зависимости от обстоятельств для других параметров тоже.
Расскажите о своем опыте верстке подобных сайтов: какие методологии,инструменты и технологии вы применяли на практике.
	https://sanekkelasev.github.io/cat_energy_page/
	(Десктопная, планшетная и мобильная версия)
	Использовал БЭМ naming, SCSS. Использовал медиа-запросы.Резиновая верстка(верстка между медиа-запросами выглядит нормально).


3.Опишите основные особенности верстки сайтов, которые должны одинаково хорошо отображаться как на любом современном компьютере, так и на смартфонах и планшетах  под управлением IOS и Android. Расскажите о своем опыте верстки подобных сайтов:какие инструменты  и технологии вы применяли,как проверяли результат на различных устройствах , какие именно устройства требовалось поддерживать:
1.Медиа-запросы.Резиновая верстка.
2.Сейчас у большинства браузеров один и тот же движок Blink, который отрисовывает страницу и у которого есть свои стили,но есть и другие движки. И для того ,чтобы браузеры отрисовывали верстку более-менее одинаково , можно сбросить стили  по- умполчанию (можно использовать файл reset),или привести к похожей отрисовки, оставив некоторые полезные стили браузера (можно использовать файл normilize)
3.Проверял результат в консоли разраработкика Chrome (Можно сделать разную ширину экрана и разную плотность пикселей).


4.Расскажите,какие инструменты помогаю вам экономить время в процессе написания, проверки и отладки кода:
1.Среда разработки VSCode.
2.Инструменты разработчика Google Chrome.

5.Вам нужно понять,почему страница отображается некорректно в Safari на ios и в IE на Windows.Код писали не вы,доступа к исходникам у вас нет.Ваши действия?Сталкивались ли вы с подобными проблемами на практике?:
1.Инструменты разработчика Google Chrome.
2.Нет,не сталкивался с таким.





	



6.Дизайнер отдал вам макет, в котором не показано,как должны выглядить интерактивные элементы при наведение мыши.Ваши действия:
1.Посмотрю в Styleguide.
2.Если не найду ,подойду к дизайнеру и спрошу.
3.Если дизайнер сторонний и не выходит на связь,самое простое сделать разные действия с помощью opacity , Что бы пользователь видел что элемент интерактивный.После того как сделаю, спрошу у тимлида оставить или нет.Если он занят ,оставлю так.



7.Какие ресурсы вы используете для развития в профессиональной сфере? Приведите 
несколько конкретных примеров (сайты, блоги и так далее). 
Какое направление развития вам более близко: JS-программирование, HTML/CSS- 
верстка или что-то ещё? 
Какие ещё области знаний, кроме тех, что непосредственно относятся к работе, вам 
интересны? 
1.Youtoobe каналы:
https://www.youtube.com/c/ITKAMASUTRA
https://www.youtube.com/c/UlbiTV
https://www.youtube.com/c/VladilenMinin
2.Сайты :
 https://learn.javascript.ru/
https://developer.mozilla.org/ru/
https://reactdev.ru/


3.Обучение:
https://htmlacademy.ru/
Выучены все тренажеры.
Обучаюсь ассинхроно профессии “Фронтед-разработчик”

8.Расскажите нам о себе и предоставьте несколько ссылок на последние работы, 
выполненные вами. 

https://hh.ru/resume/fbb60e2dff084cffc80039ed1f436a3276496b

https://github.com/SaneKKelasev?tab=repositories
